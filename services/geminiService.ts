import { GoogleGenAI, Modality, GenerateContentResponse } from "@google/genai";

if (!process.env.API_KEY) {
  throw new Error("API_KEY environment variable not set");
}

const ai = new GoogleGenAI({ apiKey: process.env.API_KEY });

const fileToGenerativePart = (base64Data: string, mimeType: string) => {
  return {
    inlineData: {
      data: base64Data,
      mimeType,
    },
  };
};

export const gradeImage = async (
  base64ImageData: string,
  mimeType: string,
  prompt: string
): Promise<string> => {
  try {
    const imagePart = fileToGenerativePart(base64ImageData, mimeType);
    
    const systemPrompt = `You are an expert digital colorist. Your task is to re-grade the provided image based on the user's prompt.
You MUST adhere to these strict constraints:
1.  **DO NOT ALTER CONTENT**: The subject, characters, clothing, posture, anatomy, background elements, and any text MUST remain identical to the original image.
2.  **PRESERVE ALL DETAILS**: Do not add, remove, or change any objects or features.
3.  **ONLY MODIFY COLOR & LIGHTING**: Your sole function is to apply a new color grade, affecting only the image's colors, mood, and lighting.

Apply the following color style: "${prompt}"`;

    const textPart = { text: systemPrompt };
    
    const response: GenerateContentResponse = await ai.models.generateContent({
      model: 'gemini-2.5-flash-image-preview',
      contents: {
        parts: [imagePart, textPart],
      },
      config: {
          responseModalities: [Modality.IMAGE, Modality.TEXT],
      },
    });

    for (const part of response.candidates?.[0]?.content?.parts || []) {
      if (part.inlineData?.data) {
        return part.inlineData.data;
      }
    }
    
    throw new Error('No image was generated by the API.');
  } catch (error) {
    console.error('Error calling Gemini API:', error);
    throw new Error('Failed to grade image. Please check the console for details.');
  }
};